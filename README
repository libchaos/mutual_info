mutual_info
===========

Given a set of documents in different classes, calculate the mutual information (http://nlp.stanford.edu/IR-book/html/htmledition/mutual-information-1.html) of each term appearing in the documents by comparing frequencies of the term in each class to frequencies in the rest of the classes.

Dependencies
------------

NumPy
Pandas
nose (for running the tests)

Getting Started
---------------

To calculate mutual information for the example datasets:

python mutual_info.py class_freq.txt term_class_freq.txt mutual_info.txt

The first input file, in this case class_freq.txt, is a tab-delimited file 
with a row for each class and the following columns:

classid: id or distinct name of the class
n: # of documents in the class associated with classid

For example:

classid	n
0	100
1	50
2	10
3	20

The second input file, in this case term_class_freq.txt, is a tab-delimited 
text file with a row for each combination of a term and a class and the following columns:

termid: id or distinct name of the term
classid: id or distinct name of the class
n: # of documents where the term associated with termid appears in a document in the class associated with classid

For example:

termid	classid	n
0	0	10
1	0	5
1	1	30
2	1	100

If a certain combination is not included, then it is assumed that there are 
no documents in the class where the term appears. 

The output file, in this case mutual_info.txt, is a tab-delimited 
text file with a row for each combination of a term and a class and the following columns:

termid: id or distinct name of the term
classid: id or distinct name of the class
mi: mutual information of the term with the class as the reference class

For example:

termid	classid	mi
0	0	.8
1	0	.1
1	1	.7
2	1	.9

If you haven't calculated the frequencies of terms and classes in a set of documents, then use the prep.py utility:

python prep.py doc.txt doc_class_freq.txt doc_term_class_freq.txt 

The input file, in this case doc.txt, is a tab-delimited file with a row for each document and the following columns:

documentid: id or distinct name of the document
classid: id or distinct name of the class to which the document belongs
text: the contents of the document stripped of tabs, new lines and carriage returns

For example:

1 a hello there
2 b yo yo
3 a hi hello
4 a yo

The files outputted by prep.py, in this case doc_class_freq.txt and doc_term_class_freq.txt, are the inputs to mutual_info.py.

